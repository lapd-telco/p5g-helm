{{/* Generate name of diameter config for PGW. Takes dict "root" [$.Value] "name" [name of epc group in values file] */}}
{{- define "p5g.pgw.diameterConfigName" -}}
{{ print (include "p5g.pgwName" . ) "-diameter" }}
{{- end -}}

{{/* Generate diameter name of pgw node. Parameter: $.Value */}}
{{- define "p5g.pgw.diameterName" -}}
{{- print (include "p5g.pgwName" .) ".localdomain" -}}
{{- end -}}

{{/* Generate diameter configuration for each pgw */}}
{{- range .Values.epcGroups -}}
{{- $ctx := dict "root" $ "name" .name -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "p5g.pgw.diameterConfigName" $ctx | quote }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "p5g.pgwLabels" $ctx | nindent 4 }}
data:
  pgw-diameter.conf: |
    Identity = {{ include "p5g.pgw.diameterName" $ctx | quote }};
    Realm = "localdomain";
    TLS_Cred = "/config-files/certs/crt.pem", "/config-files/certs/key.pem";
    TLS_CA = "/config-files/certs/ca.pem";
    LoadExtension = "/usr/lib/x86_64-linux-gnu/freeDiameter/dbg_msg_dumps.fdx" : "0x8888";
    LoadExtension = "/usr/lib/x86_64-linux-gnu/freeDiameter/dict_rfc5777.fdx";
    LoadExtension = "/usr/lib/x86_64-linux-gnu/freeDiameter/dict_mip6i.fdx";
    LoadExtension = "/usr/lib/x86_64-linux-gnu/freeDiameter/dict_nasreq.fdx";
    LoadExtension = "/usr/lib/x86_64-linux-gnu/freeDiameter/dict_nas_mipv6.fdx";
    LoadExtension = "/usr/lib/x86_64-linux-gnu/freeDiameter/dict_dcca.fdx";
    LoadExtension = "/usr/lib/x86_64-linux-gnu/freeDiameter/dict_dcca_3gpp.fdx";
    {{/* Connect to pcrf through service with cluster IP. All instances of pcrf are identical. */}}
    ConnectPeer = "pcrf.localdomain" { ConnectTo = {{ include "p5g.pcrfName" $ | quote }}; No_TLS; No_SCTP; };
{{ end -}}
